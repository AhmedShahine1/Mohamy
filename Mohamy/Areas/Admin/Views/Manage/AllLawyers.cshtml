@model IEnumerable<AuthDTO>
@using Mohamy.Core.Helpers
@{
    ViewData["Title"] = "إدارة كافة المحامين";
}
@if (TempData["SuccessMessage"] != null)
{
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<table class="table">
    <thead>
        <tr style="--bs-table-bg:#f7f7f7ff;">
            <th>صورة الملف الشخصي</th>
            <th>الاسم الكامل</th>
            <th>رقم التليفون</th>
            <th>الوصف</th>
            <th>سنوات من الخبرة</th>
            <th>مدينة</th>
            <th>التخصص الأكاديمي</th>
            <th>تعليم</th>
            <th>عدد الاستشارات</th>
            <th>اسم البنك</th>
            <th>رقم الحساب</th>
            <th>اسم المستفيد</th>
            <th>رقم IBAN</th>
            <th>حالة الحساب</th>
            <th>حالة التسجيل</th>
            <th>إجراءات</th> <!-- Moved actions into this column -->
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var user in Model)
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(user.ProfileImage))
                        {
                            <img src="@user.ProfileImage" alt="صورة الملف الشخصي" style="width: 50px; height: 50px; border-radius: 50px;" />
                        }
                        else
                        {
                            <span>---</span>
                        }
                    </td>
                    <td>@(string.IsNullOrEmpty(user.FullName) ? "---" : user.FullName)</td>
                    <td>@(string.IsNullOrEmpty(user.PhoneNumber) ? "---" : user.PhoneNumber)</td>
                    <td>@(string.IsNullOrEmpty(user.Description) ? "---" : user.Description)</td>
                    <td>@(user.yearsExperience.HasValue ? user.yearsExperience.Value.ToString() : "---")</td>
                    <td>@(string.IsNullOrEmpty(user.City) ? "---" : user.City)</td>
                    <td>@(string.IsNullOrEmpty(user.academicSpecialization) ? "---" : user.academicSpecialization)</td>
                    <td>@(string.IsNullOrEmpty(user.Education) ? "---" : user.Education)</td>
                    <td>@user.numberConsulting</td>
                    <td>@(string.IsNullOrEmpty(user.BankName) ? "---" : user.BankName)</td>
                    <td>@(string.IsNullOrEmpty(user.AccountNumber) ? "---" : user.AccountNumber)</td>
                    <td>@(string.IsNullOrEmpty(user.BeneficiaryName) ? "---" : user.BeneficiaryName)</td>
                    <td>@(string.IsNullOrEmpty(user.IBAN) ? "---" : user.IBAN)</td>

                    <!-- Account Status -->
                    <td>
                        <span class="badge @(user.Status ? "bg-success" : "bg-danger")">
                            @(user.Status ? "نشط" : "معطل")
                        </span>
                    </td>

                    <!-- Registration Status -->
                    <td>
                        <span class="badge @(GetRegistrationStatusClass(user.RegistrationStatus))">
                            @(GetRegistrationStatusText(user.RegistrationStatus))
                        </span>
                    </td>

                    <!-- More Options Dropdown -->
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-light btn-sm" type="button" data-bs-toggle="dropdown" aria-expanded="false" style="width: auto;">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <form asp-action="@(user.Status ? "Suspend" : "Activate")" method="post">
                                        <input type="hidden" name="userId" value="@user.Id" />
                                        <button type="submit" class="dropdown-item">
                                            @(user.Status ? "تعطيل الحساب" : "تفعيل الحساب")
                                        </button>
                                    </form>
                                </li>
                                <li>
                                    <form asp-action="ChangeLawyerRegistrationStatus" method="post">
                                        <input type="hidden" name="lawyerId" value="@user.Id" />
                                        <button type="submit" class="dropdown-item">تغيير حالة التسجيل</button>
                                    </form>
                                </li>
                                        <li>
                        <form asp-action="DeleteAccountAsync" method="post" onsubmit="return confirm('هل أنت متأكد أنك تريد حذف الحساب؟');">
                            <input type="hidden" name="userId" value="@user.Id" />
                            <button type="submit" class="dropdown-item text-danger">
                                حذف الحساب
                            </button>
                        </form>
                    </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="15" class="text-center">لا توجد بيانات لعرضها</td>
            </tr>
        }
    </tbody>
</table>

@functions {
    private string GetRegistrationStatusText(LawyerRegistrationStatus status)
    {
        return status switch
        {
            LawyerRegistrationStatus.NotLawyer => "ليس محاميًا",
            LawyerRegistrationStatus.RequestReceived => "تم استلام الطلب",
            LawyerRegistrationStatus.LicenseApproved => "تمت الموافقة على الرخصة",
            LawyerRegistrationStatus.DetailSibmitted => "تمت إضافة التفاصيل",
            LawyerRegistrationStatus.Approved => "تمت الموافقة على الحساب",
            _ => "غير معروف"
        };
    }

    private string GetRegistrationStatusClass(LawyerRegistrationStatus status)
    {
        return status switch
        {
            LawyerRegistrationStatus.NotLawyer => "bg-secondary text-white",
            LawyerRegistrationStatus.RequestReceived => "bg-warning text-dark",
            LawyerRegistrationStatus.LicenseApproved => "bg-primary text-white",
            LawyerRegistrationStatus.DetailSibmitted => "bg-info text-white",
            LawyerRegistrationStatus.Approved => "bg-success text-white",
            _ => "bg-light text-dark"
        };
    }
}
